/****** Object:  StoredProcedure [dbo].[COR-BR_UPDATE_SALDO_CONTAS]    Script Date: 21/05/2021 20:35:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[COR-BR_UPDATE_SALDO_CONTAS] @MES_PROCESSAMENTO VARCHAR(10)
AS
---- ===============================================
-- AUTHOR :DOUGLAS VIEIRA
-- CREATE DATE: 18/01/2021
-- USED TABLES: 
-- DESCRIPTION:
-- UPDATE: 
-- ================================================

/******************* P A R A M E T R O    D E    D A T A ********************/
DECLARE @DT_INI VARCHAR(10)
DECLARE @DT_FIM VARCHAR(10)
DECLARE @INI_MES_PROCESSAMENTO VARCHAR(10)
DECLARE @FIM_MES_PROCESSAMENTO VARCHAR(10)
--DECLARE @MES_PROCESSAMENTO VARCHAR(10) 


--SET @MES_PROCESSAMENTO = '20210201' -- SERÁ ORIUNDO DE UM ARGUMENTO NA PROCEDURE

SET @INI_MES_PROCESSAMENTO = CONVERT(DATE,DATEADD(MONTH, DATEDIFF(MONTH, 0, @MES_PROCESSAMENTO), 0),103)			   --PRIMEIRO DIA DO MÊS A SER CALCULADO
SET @FIM_MES_PROCESSAMENTO = CONVERT(DATE,DATEADD(DAY, -1, DATEADD(M, DATEDIFF(M, 0, @MES_PROCESSAMENTO) + 1, 0)),103) --ULTIMO DIA DO MÊS A SER CALCULADO

SET @DT_INI = '20201201'			 -- DATA INICIO PARA CALCULAR O ACUMULADO
SET @DT_FIM = @FIM_MES_PROCESSAMENTO -- DATA FINAL PARA CALCULAR ACUMULADO
/******************* P A R A M E T R O    D E    D A T A ********************/

--INICIO DROP TEMPS
IF OBJECT_ID('TEMPDB..#RESULTADO_ANTERIOR') IS NOT NULL
BEGIN DROP TABLE #RESULTADO_ANTERIOR END

IF OBJECT_ID('TEMPDB..#MOVIMENTACAO') IS NOT NULL
BEGIN DROP TABLE #MOVIMENTACAO END

IF OBJECT_ID('TEMPDB..#BASE') IS NOT NULL
BEGIN DROP TABLE #BASE END

IF OBJECT_ID('TEMPDB..#APOIO') IS NOT NULL
BEGIN DROP TABLE #APOIO END

--FIM DROP TEMPS

/*****************************************************
STEP 1: CALCULAR O SALDO HISTORICO DAS CONTAS
COMMENT: O HISTORICO CALCULADO É M-1. DESSA MANDEIRA É POSSIVÉL OBTER O RESULTADO DA COLUNA "SALDO ANTERIOR"
*****************************************************/

--INICIO STEP 1
SELECT
	R.SISTEMADEORIGEM,
	R.EMPRESA,
	R.CONTA,
	R.CODCCUSTO,
	R.ELEMENTOPEP,
	R.ORDEM,
	SUM(CONVERT(FLOAT,R.VALOR)) AS VALOR
	,[CENTRO DE LUCRO]
INTO #RESULTADO_ANTERIOR
FROM [DBO].[COR-BR_RAZAO_EMPRESAS] AS R
WHERE CONVERT(DATE,DATA,103) BETWEEN @DT_INI AND CONVERT(DATE,DATEADD(MM,DATEDIFF(MM, 0, @MES_PROCESSAMENTO), -1),103)
GROUP BY
	R.SISTEMADEORIGEM,
	R.EMPRESA,
	R.CONTA,
	R.CODCCUSTO,
	R.ELEMENTOPEP,
	R.ORDEM,
	[CENTRO DE LUCRO]
--FIM STEP 1



/*************************************************************
STEP 2: CALCULAR O SALDO DAS CONTAS DO MÊS SELECIONADO
COMMENT: A MOVIMENTAÇÃO É CALCULADA CONSIDERANDO DO PRIMEIRO DIA AO ULTIMO DO MÊS
*************************************************************/

--INICIO STEP 2
SELECT
	RM.SISTEMADEORIGEM,
	RM.EMPRESA,
	RM.CONTA,
	RM.CODCCUSTO,
	RM.ELEMENTOPEP,
	RM.ORDEM,
	CONVERT(DATE,DATEADD(MONTH, DATEDIFF(MONTH, 0, RM.[DATA]), 0),103) AS 'MES_REF',
	CONVERT(FLOAT,SUM(CASE WHEN RM.TIPO = 'DEBITO' THEN RM.VALOR ELSE 0 END)) AS 'DEBITO',
	CONVERT(FLOAT,SUM(CASE WHEN RM.TIPO = 'CREDITO' THEN RM.VALOR ELSE 0 END)) AS 'CREDITO',
	SUM(CONVERT(FLOAT,RM.[VALOR])) AS VALOR,
	[CENTRO DE LUCRO]
INTO #MOVIMENTACAO
FROM [DBO].[COR-BR_RAZAO_EMPRESAS] AS RM 
WHERE CONVERT(DATE,RM.DATA,103) BETWEEN @INI_MES_PROCESSAMENTO AND @FIM_MES_PROCESSAMENTO
GROUP BY
	RM.SISTEMADEORIGEM,
	RM.EMPRESA,
	RM.CONTA,
	RM.CODCCUSTO,
	RM.ELEMENTOPEP,
	RM.ORDEM,
	CONVERT(DATE,DATEADD(MONTH, DATEDIFF(MONTH, 0, RM.[DATA]), 0),103),
	[CENTRO DE LUCRO]
--FIM STEP 2


/*************************************************************
STEP 3: CRIA TABELA TEMPORARIA E LOGO EM SEGUIDA LIMPA
COMMENT: APLICA A TÉCNICA DE USAR O TOP 1 PARA CRIAR UMA TEMPORÁRIA COM AS CARACTERISTICAS NECESSÁRIAS (COLUNAS E TIPO DE COLUNAS)
*************************************************************/

--INICIO STEP 3
SELECT
	TOP 1
	A.SISTEMADEORIGEM,
	A.EMPRESA,
	A.CONTA,
	A.CODCCUSTO,
	A.ELEMENTOPEP,
	A.ORDEM,
	A.[CENTRO DE LUCRO]
INTO #APOIO
FROM #RESULTADO_ANTERIOR AS A
TRUNCATE TABLE #APOIO
--FIM STEP 3


/*************************************************************
STEP 4: INSERE DADOS MESTRES NA TABELA DE APOIO
COMMENT: É INSERIDO NA TABELA #APOIO TODOS OS DADOS CONSIDERADOS DE "DIMENSÃO" DO HISTORICO E DO MÊS A SER PROCESSADO PARA NO STEP SEGUINTE SER REMOVIDA A DUPLICIDADE
*************************************************************/

--INICIO STEP 4
INSERT INTO #APOIO
SELECT
	A.SISTEMADEORIGEM,
	A.EMPRESA,
	A.CONTA,
	A.CODCCUSTO,
	A.ELEMENTOPEP,
	A.ORDEM,
	A.[CENTRO DE LUCRO]
FROM #RESULTADO_ANTERIOR AS A

INSERT INTO #APOIO
SELECT
	M.SISTEMADEORIGEM,
	M.EMPRESA,
	M.CONTA,
	M.CODCCUSTO,
	M.ELEMENTOPEP,
	M.ORDEM,
	M.[CENTRO DE LUCRO]
FROM #MOVIMENTACAO AS M
--FIM STEP 4



/*************************************************************
STEP 5: RETIRA DUPLICIDADE
COMMENT: REMOVE OS DADOS DUPLICADOS INSERIDOS NO STEP ANTERIOR, GARANTINDO QUE TANTO PARA O HISTORICO QUANTO PARA O MÊS A SER PROCESSADO TERÁ DADOS DIMENSIONAIS.
*************************************************************/

--INICIO STEP 5
SELECT
	A.SISTEMADEORIGEM,
	A.EMPRESA,
	A.CONTA,
	A.CODCCUSTO,
	A.ELEMENTOPEP,
	A.ORDEM,
	A.[CENTRO DE LUCRO]
INTO #BASE
FROM #APOIO AS A
GROUP BY
	A.SISTEMADEORIGEM,
	A.EMPRESA,
	A.CONTA,
	A.CODCCUSTO,
	A.ELEMENTOPEP,
	A.ORDEM,
	A.[CENTRO DE LUCRO]
--FIM STEP 5

DELETE [DBO].[COR-BR_SALDO_CONTAS_ABERTO_POR_SISTEMA]
WHERE MES_REF = @INI_MES_PROCESSAMENTO


DELETE [DBO].[COR-BR_SALDO_CONTAS_SISTEMAS_AGRUPADOS]
WHERE MES_REF = @INI_MES_PROCESSAMENTO

--select * from #BASE
--WHERE SISTEMADEORIGEM = 'SAP'

/*************************************************************
STEP 6: CRIA BALANCETE
COMMENT: PARA GERAR O BALANCENTE É NECESSÁRIO APLICAR PARA O PASSADO O NOVO PLANO DE CONTAS DO SAP. DESSA FORMA A TROCA DE ERPs SERÁ TRANSPARENTE NO RELATÓRIO.
*************************************************************/
/*
-- TOTVS
INSERT INTO [DBO].[COR-BR_SALDO_CONTAS_ABERTO_POR_SISTEMA]
SELECT
	B.SISTEMADEORIGEM,
	B.EMPRESA,
	B.CONTA,
	ISNULL(C.SAP_CODCONTA,'999999999') AS 'CONTA_SAP', --HÁ UMA PENDENCIA DO TIME DE FI PARA REALIZAR OS APONTAMENTOS DAS CONTAS ANTIGAS PARA AS NOVAS. DESSA FORMA, QUANDO NÃO FOR ENCONTRADA UMA CONTA CORRESPONDENTE ELA SERÁ ATRIBUIDA AO CÓDIGO 999999999
	B.CODCCUSTO AS 'CODCCUSTO_TOTVS',
	IIF(CC.TIPOCOLETOR IS NOT NULL,(IIF(CC.TIPOCOLETOR = 'K',CC.COLETORCUSTO,NULL)),E.SOCIEDAD + 'X99999') AS 'CODCCUSTO_SAP',
	B.ELEMENTOPEP,
	IIF(CC.TIPOCOLETOR IS NOT NULL,(IIF(CC.TIPOCOLETOR = 'F',CC.COLETORCUSTO,NULL)),NULL) AS 'ORDEM_INTERNA',
	--CC.COLETORCUSTO,
	CC.TIPOCOLETOR,
	SUM(CONVERT(FLOAT,(ISNULL(H.VALOR,0)))) AS 'SALDO INICIAL',
	SUM(ISNULL(M.DEBITO,0)) AS 'DEBITO',
	SUM(ISNULL(M.CREDITO,0)) AS 'CREDITO',
	SUM(ISNULL(M.VALOR,0)) AS  'MOVIMENTAÇÃO',
	SUM(ISNULL(H.VALOR,0) + ISNULL(M.VALOR,0)) AS 'SALDO',
	@INI_MES_PROCESSAMENTO AS 'MES_REF'
	FROM #BASE AS B
LEFT JOIN #RESULTADO_ANTERIOR AS H ON B.SISTEMADEORIGEM = H.SISTEMADEORIGEM AND B.EMPRESA = H.EMPRESA AND B.CONTA = H.CONTA AND (B.CODCCUSTO = H.CODCCUSTO OR (B.CODCCUSTO IS NULL AND  H.CODCCUSTO IS NULL)) AND (B.ELEMENTOPEP = H.ELEMENTOPEP OR (B.ELEMENTOPEP IS NULL AND H.ELEMENTOPEP IS NULL)) AND (B.ORDEM = H.ORDEM OR (B.ORDEM IS NULL AND H.ORDEM IS NULL))
LEFT JOIN #MOVIMENTACAO AS M ON B.SISTEMADEORIGEM = M.SISTEMADEORIGEM AND B.EMPRESA = M.EMPRESA AND B.CONTA = M.CONTA AND (B.CODCCUSTO = M.CODCCUSTO OR (B.CODCCUSTO IS NULL AND  M.CODCCUSTO IS NULL)) AND (B.ELEMENTOPEP = M.ELEMENTOPEP OR (B.ELEMENTOPEP IS NULL AND M.ELEMENTOPEP IS NULL)) AND (B.ORDEM = M.ORDEM OR (B.ORDEM IS NULL AND M.ORDEM IS NULL))
LEFT JOIN [dbo].[SAP-BR_EMPRESA] AS E ON B.EMPRESA = E.EMPRESA COLLATE LATIN1_GENERAL_CS_AI
LEFT JOIN [dbo].[SAP-BR_COLETORCUSTO] AS CC ON B.CODCCUSTO = CC.CC_TOTVS COLLATE LATIN1_GENERAL_CS_AI AND E.CDOCOLIGADA = CC.CODCOLIGADA --COLLATE LATIN1_GENERAL_CS_AI
LEFT JOIN [dbo].[SAP-BR_CCONTA] AS C ON B.CONTA = C.RM_CODCONTA COLLATE LATIN1_GENERAL_CS_AI AND E.CDOCOLIGADA = C.CODCOLIGADA --COLLATE LATIN1_GENERAL_CS_AI
WHERE B.SISTEMADEORIGEM = 'TOTVS'
GROUP BY
	B.SISTEMADEORIGEM,
	B.EMPRESA,
	B.CONTA,
	C.SAP_CODCONTA,
	B.CODCCUSTO,
	B.ELEMENTOPEP,
	B.ORDEM,
	IIF(CC.TIPOCOLETOR IS NOT NULL,(IIF(CC.TIPOCOLETOR = 'K',CC.COLETORCUSTO,NULL)),E.SOCIEDAD + 'X99999'),
	IIF(CC.TIPOCOLETOR IS NOT NULL,(IIF(CC.TIPOCOLETOR = 'F',CC.COLETORCUSTO,NULL)),NULL),
	CC.TIPOCOLETOR
*/

--SAP
INSERT INTO [DBO].[COR-BR_SALDO_CONTAS_ABERTO_POR_SISTEMA]
SELECT
	B.SISTEMADEORIGEM,
	B.EMPRESA,
	B.CONTA,
	B.CONTA AS 'CONTA_SAP', --HÁ UMA PENDENCIA DO TIME DE FI PARA REALIZAR OS APONTAMENTOS DAS CONTAS ANTIGAS PARA AS NOVAS. DESSA FORMA, QUANDO NÃO FOR ENCONTRADA UMA CONTA CORRESPONDENTE ELA SERÁ ATRIBUIDA AO CÓDIGO 999999999
	NULL AS 'CODCCUSTO_TOTVS',
	B.CODCCUSTO AS 'CODCCUSTO_SAP',
	B.ELEMENTOPEP,
	B.ORDEM AS 'ORDEM_INTERNA',
	CC.TIPOCOLETOR,
	SUM(CONVERT(FLOAT,(ISNULL(H.VALOR,0)))) AS 'SALDO INICIAL',
	SUM(ISNULL(M.DEBITO,0)) AS 'DEBITO',
	SUM(ISNULL(M.CREDITO,0)) AS 'CREDITO',
	SUM(ISNULL(M.VALOR,0)) AS  'MOVIMENTAÇÃO',
	SUM(ISNULL(H.VALOR,0) + ISNULL(M.VALOR,0)) AS 'SALDO',
	@INI_MES_PROCESSAMENTO AS 'MES_REF',
	B.[CENTRO DE LUCRO]
	FROM #BASE AS B
LEFT JOIN #RESULTADO_ANTERIOR AS H ON B.SISTEMADEORIGEM = H.SISTEMADEORIGEM AND B.EMPRESA = H.EMPRESA AND B.CONTA = H.CONTA AND (B.CODCCUSTO = H.CODCCUSTO OR (B.CODCCUSTO IS NULL AND  H.CODCCUSTO IS NULL)) AND (B.ELEMENTOPEP = H.ELEMENTOPEP OR (B.ELEMENTOPEP IS NULL AND H.ELEMENTOPEP IS NULL)) AND (B.ORDEM = H.ORDEM OR (B.ORDEM IS NULL AND H.ORDEM IS NULL)) AND (B.[CENTRO DE LUCRO] = H.[CENTRO DE LUCRO] OR (B.[CENTRO DE LUCRO] IS NULL AND H.[CENTRO DE LUCRO] IS NULL))
LEFT JOIN #MOVIMENTACAO AS M ON B.SISTEMADEORIGEM = M.SISTEMADEORIGEM AND B.EMPRESA = M.EMPRESA AND B.CONTA = M.CONTA AND (B.CODCCUSTO = M.CODCCUSTO OR (B.CODCCUSTO IS NULL AND  M.CODCCUSTO IS NULL)) AND (B.ELEMENTOPEP = M.ELEMENTOPEP OR (B.ELEMENTOPEP IS NULL AND M.ELEMENTOPEP IS NULL)) AND (B.ORDEM = M.ORDEM OR (B.ORDEM IS NULL AND M.ORDEM IS NULL)) AND (B.[CENTRO DE LUCRO] = M.[CENTRO DE LUCRO] OR (B.[CENTRO DE LUCRO] IS NULL AND M.[CENTRO DE LUCRO] IS NULL))
LEFT JOIN [dbo].[SAP-BR_EMPRESA] AS E ON B.EMPRESA = E.EMPRESA COLLATE LATIN1_GENERAL_CS_AI
LEFT JOIN [dbo].[SAP-BR_COLETORCUSTO] AS CC ON B.CODCCUSTO = CC.CC_TOTVS COLLATE LATIN1_GENERAL_CS_AI AND E.CDOCOLIGADA = CC.CODCOLIGADA --COLLATE LATIN1_GENERAL_CS_AI
LEFT JOIN [dbo].[SAP-BR_CCONTA] AS C ON B.CONTA = C.RM_CODCONTA COLLATE LATIN1_GENERAL_CS_AI AND E.CDOCOLIGADA = C.CODCOLIGADA --COLLATE LATIN1_GENERAL_CS_AI
WHERE B.SISTEMADEORIGEM = 'SAP'
GROUP BY
	B.SISTEMADEORIGEM,
	B.EMPRESA,
	B.CONTA,
	B.CONTA, --HÁ UMA PENDENCIA DO TIME DE FI PARA REALIZAR OS APONTAMENTOS DAS CONTAS ANTIGAS PARA AS NOVAS. DESSA FORMA, QUANDO NÃO FOR ENCONTRADA UMA CONTA CORRESPONDENTE ELA SERÁ ATRIBUIDA AO CÓDIGO 999999999
	B.CODCCUSTO,
	B.ELEMENTOPEP,
	B.ORDEM,
	CC.TIPOCOLETOR
   ,B.[CENTRO DE LUCRO]


--AMBOS SISTEMAS POREM AGRUPADOS
INSERT INTO [DBO].[COR-BR_SALDO_CONTAS_SISTEMAS_AGRUPADOS]
SELECT 
	 [EMPRESA]
	,[CONTA_SAP]
	,[CODCCUSTO_SAP]
	,[ELEMENTOPEP]
	,[ORDEMINTERNA]
,SUM([SALDO INICIAL]) AS [SALDO INICIAL]
,SUM([DEBITO]) AS [DEBITO]
,SUM([CREDITO]) AS [CREDITO]
,SUM([MOVIMENTO]) AS [MOVIMENTO]
,SUM([SALDO]) AS [SALDO]
,[MES_REF]
,[CENTRO DE LUCRO]
FROM [DBO].[COR-BR_SALDO_CONTAS_ABERTO_POR_SISTEMA]
WHERE MES_REF = @INI_MES_PROCESSAMENTO
GROUP BY 
	 [EMPRESA]
	,[CONTA_SAP]
	,[CODCCUSTO_SAP]
	,[ELEMENTOPEP]
	,[ORDEMINTERNA]
	,[MES_REF]
	,[CENTRO DE LUCRO]
